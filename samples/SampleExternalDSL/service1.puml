@startuml

participant integrationflowlicense : IntegrationFlow("License_Renewal_use_case")

participant inboundendpointhttp1 : InboundEndpoint(protocol("http"),port(6060),context("/foo"))

participant pipelineptt : Pipeline("message_flow_1")

participant pipelineerrorhandling : Pipeline("error_handling_flow")

participant outboundendpoint1 : OutboundEndpoint(protocol("http"),host("http://localhost:9091/INS"))

participant outboundendpoint2 : OutboundEndpoint(protocol("http"),host("http://localhost:9092/INS"))

participant outboundendpoint3 : OutboundEndpoint(protocol("http"),host("http://localhost:9093/INS"))

inboundendpointhttp1 -> pipelineptt : "request"

process_message("filter",configs("xpath://test","inline:true"))

process_message("call",configs("user:test","password:chana"))

pipelineptt -> outboundendpoint1 : "Validate_policy"

outboundendpoint1 -> pipelineptt : "Validation_response"

ref pipelineerrorhandling


alt (xpath://response/status=="success")
    process_message("call",configs())
    pipelineptt -> outboundendpoint2 : "Validate_policy"
    outboundendpoint2 -> pipelineptt : "Validate_response"

else
    process_message("call",configs())
    pipelineptt -> outboundendpoint3 : "Validate_policy"
    outboundendpoint3 -> pipelineptt : "Validate_response"
end

loop (xpath://certs)
    process_message("filter",configs())
    process_message("call",configs())
end

pipelineptt -> inboundendpointhttp1 : "Final_Response"


@enduml