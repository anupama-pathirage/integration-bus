@startuml

participant integrationflowRouter : IntegrationFlow("Message_Reouter")

participant inboundendpointListener : InboundEndpoint(protocol("http"), port(8080), context("/router"))

participant pipeline1 : Pipeline("router_flow")

participant outboundendpoint1 : OutboundEndpoint(protocol("http"), host("http://localhost:8280/backend1"))

participant outboundendpoint2 : OutboundEndpoint(protocol("http"), host("http://localhost:8280/backend2"))

inboundendpointListener -> pipeline1 : "request"

log("## Before Filter")

alt condition(source("routeId", "Transport"), pattern("r1"))
    log("Filter : True")
    call("outboundendpoint1")
    pipeline1 -> outboundendpoint1 : "Request to Backend1"
    outboundendpoint1 -> pipeline1 : "Response from Backend1"

else
    log("Filter : False")
    call("outboundendpoint1")
    pipeline1 -> outboundendpoint2 : "Request to Backend2"
    outboundendpoint2 -> pipeline1 : "Response from Backend2"
end

log("## After Filter")
respond()

pipeline1 -> inboundendpointListener : "Final_Response"

@enduml